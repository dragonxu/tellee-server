###
# Copyright (c) 2015-2017 Mainflux
#
# Mainflux is licensed under an Apache license, version 2.0 license.
# All rights not explicitly granted in the Apache license, version 2.0 are reserved.
# See the included LICENSE file for more details.
###

version: "3"

networks:
  mainflux-base-net:
    driver: bridge

volumes:
  mainflux-users-db-volume:
  mainflux-things-db-volume:
  mainflux-mqtt-redis-volume:
  mainflux-things-redis-volume:
  mainflux-es-redis-volume:
  mainflux-bootstrap-db-volume:
  mainflux-influxdb-volume:

services:
  nginx:
    image: nginx:1.14.2
    container_name: mainflux-nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx-${AUTH-key}.conf:/etc/nginx/nginx.conf
      - ./ssl/authorization.js:/etc/nginx/authorization.js
      - ./ssl/certs/mainflux-server.crt:/etc/ssl/certs/mainflux-server.crt
      - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - ./ssl/certs/mainflux-server.key:/etc/ssl/private/mainflux-server.key
      - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - 80:80
      - 443:443
      - 8883:8883
    networks:
      - mainflux-base-net

  nats:
    image: nats:1.3.0
    container_name: mainflux-nats
    restart: on-failure
    networks:
      - mainflux-base-net

  users-db:
    image: postgres:10.2-alpine
    container_name: mainflux-users-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: users
    ports:
      - 5432:5432
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-users-db-volume:/var/lib/postgresql/data

  users:
    image: mainflux/users:latest
    container_name: mainflux-users
    depends_on:
      - users-db
    expose:
      - 8181
    restart: on-failure
    environment:
      MF_USERS_LOG_LEVEL: debug
      MF_USERS_DB_HOST: users-db
      MF_USERS_DB_PORT: 5432
      MF_USERS_DB_USER: mainflux
      MF_USERS_DB_PASS: mainflux
      MF_USERS_DB: users
      MF_USERS_HTTP_PORT: 8180
      MF_USERS_GRPC_PORT: 8181
      MF_USERS_SECRET: secret
    ports:
      - 8180:8180
    networks:
      - mainflux-base-net

#   keycloak-client:
#     image: keycloak-client:latest
#     container_name: mainflux-keycloak-client
#     depends_on:
#       - users-db
#     restart: on-failure
#     environment:
#       MF_USERS_LOG_LEVEL: debug
#       MF_USERS_DB_HOST: users-db
#       MF_USERS_DB_PORT: 5432
#       MF_USERS_DB_USER: mainflux
#       MF_USERS_DB_PASS: mainflux
#       MF_USERS_DB: users
#       MF_USERS_SECRET: secret
#     ports:
#       - 8200:8200
#     networks:
#       - mainflux-base-net

  things-db:
    image: postgres:10.2-alpine
    container_name: mainflux-things-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: things
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-things-db-volume:/var/lib/postgresql/data

  things-redis:
    image: redis:5.0-alpine
    container_name: mainflux-things-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-things-redis-volume:/data

  things:
    image: mainflux/things:latest
    container_name: mainflux-things
    depends_on:
      - things-db
      - users
    restart: on-failure
    environment:
      MF_THINGS_LOG_LEVEL: debug
      MF_THINGS_DB_HOST: things-db
      MF_THINGS_DB_PORT: 5432
      MF_THINGS_DB_USER: mainflux
      MF_THINGS_DB_PASS: mainflux
      MF_THINGS_DB: things
      MF_THINGS_CACHE_URL: things-redis:6379
      MF_THINGS_ES_URL: es-redis:6379
      MF_THINGS_HTTP_PORT: 8182
      MF_THINGS_GRPC_PORT: 8183
      MF_USERS_URL: users:8181
      MF_THINGS_SECRET: secret
    ports:
      - 8182:8182
      - 8183:8183
    networks:
      - mainflux-base-net

  normalizer:
    image: mainflux/normalizer:latest
    container_name: mainflux-normalizer
    restart: on-failure
    depends_on:
      - nats
    expose:
      - 8184
    environment:
      MF_NORMALIZER_LOG_LEVEL: debug
      MF_NATS_URL: nats://nats:4222
      MF_NORMALIZER_PORT: 8184
    ports:
      - 8184:8184
    networks:
      - mainflux-base-net

  #ui:
  #  image: mainflux/ui:latest
  #  container_name: mainflux-ui
  #  restart: on-failure
  #  ports:
  #    - 3000:3000
  #  networks:
  #    - mainflux-base-net

  ws-adapter:
    image: mainflux/ws:latest
    container_name: mainflux-ws
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      MF_WS_ADAPTER_LOG_LEVEL: debug
      MF_WS_ADAPTER_PORT: 8186
      MF_NATS_URL: nats://nats:4222
      MF_THINGS_URL: things:8183
    ports:
      - 8186:8186
    networks:
      - mainflux-base-net

  http-adapter:
    image: mainflux/http:latest
    container_name: mainflux-http
    depends_on:
      - things
      - nats
    restart: on-failure
    expose:
      - 8185
    environment:
      MF_HTTP_ADAPTER_LOG_LEVEL: debug
      MF_HTTP_ADAPTER_PORT: 8185
      MF_NATS_URL: nats://nats:4222
      MF_THINGS_URL: things:8183
    ports:
      - 8185:8185
    networks:
      - mainflux-base-net

  es-redis:
    image: redis:5.0-alpine
    container_name: mainflux-es-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-es-redis-volume:/data

  mqtt-redis:
    image: redis:5.0-alpine
    container_name: mainflux-mqtt-redis
    restart: on-failure
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-mqtt-redis-volume:/data

  mqtt-adapter:
    image: mainflux/mqtt:latest
    container_name: mainflux-mqtt
    depends_on:
      - things
      - nats
      - mqtt-redis
    restart: on-failure
    environment:
      MF_MQTT_ADAPTER_LOG_LEVEL: debug
      MF_MQTT_INSTANCE_ID: mqtt-adapter-1
      MF_MQTT_ADAPTER_PORT: 1883
      MF_MQTT_ADAPTER_WS_PORT: 8880
      MF_MQTT_ADAPTER_REDIS_HOST: mqtt-redis
      MF_MQTT_ADAPTER_ES_HOST: es-redis
      MF_NATS_URL: nats://nats:4222
      MF_THINGS_URL: things:8183
    ports:
      - 1883:1883
      - 8880:8880
    networks:
      - mainflux-base-net

  coap-adapter:
    image: mainflux/coap:latest
    container_name: mainflux-coap
    depends_on:
      - things
      - nats
    restart: on-failure
    environment:
      MF_COAP_ADAPTER_LOG_LEVEL: debug
      MF_COAP_ADAPTER_PORT: 5683
      MF_NATS_URL: nats://nats:4222
      MF_THINGS_URL: things:8183
    ports:
      - 5683:5683/udp
    networks:
      - mainflux-base-net

  bootstrap-db:
    image: postgres:10.2-alpine
    container_name: mainflux-bootstrap-db
    restart: on-failure
    environment:
      POSTGRES_USER: mainflux
      POSTGRES_PASSWORD: mainflux
      POSTGRES_DB: bootstrap
    networks:
      - mainflux-base-net
    volumes:
      - mainflux-bootstrap-db-volume:/var/lib/postgresql/data

  bootstrap:
    image: mainflux/bootstrap:latest
    container_name: mainflux-bootstrap
    depends_on:
      - bootstrap-db
    restart: on-failure
    ports:
      - 8200:8200
    environment:
      MF_BOOTSTRAP_LOG_LEVEL: debug
      MF_BOOTSTRAP_DB_HOST: bootstrap-db
      MF_BOOTSTRAP_DB_PORT: 5432
      MF_BOOTSTRAP_DB_USER: mainflux
      MF_BOOTSTRAP_DB_PASS: mainflux
      MF_BOOTSTRAP_DB: bootstrap
      MF_BOOTSTRAP_DB_SSL_MODE: disable
      MF_BOOTSTRAP_PORT: 8200
      MF_SDK_BASE_URL: http://mainflux-things:8182
      MF_USERS_URL: mainflux-users:8181
      MF_THINGS_ES_URL: es-redis:6379
      MF_BOOTSTRAP_ES_URL: es-redis:6379
    networks:
      - mainflux-base-net


  influxdb-reader:
    image: mainflux/influxdb-reader:latest
    container_name: mainflux-influxdb-reader
    restart: on-failure
    environment:
      MF_INFLUX_READER_LOG_LEVEL: debug
      MF_THINGS_URL: things:8183
      MF_INFLUX_READER_PORT: 8905
      MF_INFLUX_READER_DB_NAME: mainflux
      MF_INFLUX_READER_DB_HOST: mainflux-influxdb
      MF_INFLUX_READER_DB_PORT: 8086
      MF_INFLUX_READER_DB_USER: mainflux
      MF_INFLUX_READER_DB_PASS: mainflux
    ports:
      - 8905:8905
    networks:
      - mainflux-base-net

  influxdb:
    image: influxdb:1.6.4-alpine
    container_name: mainflux-influxdb
    restart: on-failure
    environment:
      INFLUXDB_DB: mainflux
      INFLUXDB_ADMIN_USER: mainflux
      INFLUXDB_ADMIN_PASSWORD: mainflux
    networks:
      - mainflux-base-net
    ports:
      - 8086:8086
    volumes:
      - mainflux-influxdb-volume:/var/lib/influxdb

  influxdb-writer:
    image: mainflux/influxdb-writer:latest
    container_name: mainflux-influxdb-writer
    depends_on:
      - influxdb
    restart: on-failure
    environment:
      MF_INFLUX_WRITER_LOG_LEVEL: debug
      MF_NATS_URL: nats://nats:4222
      MF_INFLUX_WRITER_PORT: 8900
      MF_INFLUX_WRITER_BATCH_SIZE: 5000
      MF_INFLUX_WRITER_BATCH_TIMEOUT: 5
      MF_INFLUX_WRITER_DB_NAME: mainflux
      MF_INFLUX_WRITER_DB_HOST: mainflux-influxdb
      MF_INFLUX_WRITER_DB_PORT: 8086
      MF_INFLUX_WRITER_DB_USER: mainflux
      MF_INFLUX_WRITER_DB_PASS: mainflux
    ports:
      - 8900:8900
    networks:
      - mainflux-base-net

  ui-interface:
    container_name: ui-interface
    restart: on-failure
    build:
      context: ../mainflux_admin/client/
      dockerfile: .
    ports:
      - "8000:8000"
    networks:
      - mainflux-base-net
    links:
      - ui-api

  ui-api:
    container_name: ui-api
    restart: on-failure
    build:
      context: ../mainflux_admin/
      dockerfile: .
    ports:
      - "5000:5000"
    depends_on:
      - ui-db
    networks:
      - mainflux-base-net
    links:
      - ui-db
      - nginx
      - bootstrap
    environment:
      WAIT_HOSTS: ui-db:27017
      DATABASE_URL: mongodb://ui-db:27017/mainflux_admin
      MAINFLUX_URL: nginx
      BOOTSTRAP_URL: bootstrap:8200
      UI_URL: ui-interface:8000

  ui-db:
    container_name: ui-mongodb
    image: mongo
    restart: always
    volumes:
      - ./data-node:/data/db
    command: mongod
    networks:
      - mainflux-base-net
